<!--  -->
<template>
	<view class="container">
		<view class="tabs">
			<image class="tab" @tap="tabClick(1)" src="{{tabIndex == 1?'https://images.facedog.cn/public/chat/ilike-active.png?4':'https://images.facedog.cn/public/chat/ilike.png?4'}}" mode="aspectFill"></image>
			<image class="tab" @tap="tabClick(2)" src="{{tabIndex == 2?'https://images.facedog.cn/public/chat/likeme-active.png?4':'https://images.facedog.cn/public/chat/likeme.png?4'}}" mode="aspectFill"></image>
			<image class="tab" @tap="tabClick(3)" src="{{tabIndex == 3?'https://images.facedog.cn/public/chat/friends-active.png?4':'https://images.facedog.cn/public/chat/friends.png?4'}}" mode="aspectFill"></image>
			<image class="tab" @tap="tabClick(4)" src="{{tabIndex == 4?'https://images.facedog.cn/public/chat/notify-active.png?4':'https://images.facedog.cn/public/chat/notify.png?4'}}" mode="aspectFill"></image>
		</view>
		<scroll-view scroll-y style="height:{{scrollHeight}}px" class="scroll" wx:if="{{tabIndex == 1}}">
			<ilike />
		</scroll-view>
		<scroll-view scroll-y class="scroll" style="height:{{scrollHeight}}px" wx:if="{{tabIndex == 2}}">
			<likeme />
		</scroll-view>
		<scroll-view scroll-y class="scroll" style="height:{{scrollHeight}}px" wx:if="{{tabIndex == 3}}">
			<chatTab />
		</scroll-view>
		<scroll-view scroll-y class="scroll" style="height:{{scrollHeight}}px" wx:if="{{tabIndex == 4}}">
			<notify />
		</scroll-view>
	</view>
</template>

<script>
	import util from '@/utils/util.js'; // 转换时间插件
	import webim from '@/utils/webim.js'; // 腾讯云im包
	import webimhandler from '@/utils/handler';
	import {
	  onMsgNotify,
	  onMsgNotifyChat,
	  init,
	  sdkLogin
	} from '@/utils/handler.js'; // 这个是所有事件的腾讯js，这个页面需要用到登录
	import Config from '@/utils/config';
	import likeme from './page/likeme';
	import ilike from './page/ilike';
	import chatTab from './page/chatTab';
	import notify from './page/notify';
	import { Event } from '@/utils/event.js';
	import wepy from 'wepy';
	export default class Chat extends wepy.component {
	  data = {
	    isNoData: true,
	    noData: '/no-msg.png', // 无数据的图片
	    contactList: [], // 会话列表
	    tabIndex: 1,
	    scrollHeight: 0
	  };
	  components = {
	    likeme,
	    ilike,
	    chatTab,
	    notify
	  };

	  methods = {
	    tabClick(index) {
	      this.tabIndex = index;
	      if (index == 1) {
	        this.$invoke('ilike', 'initData');
	      } else if (index == 2) {
	        this.$invoke('likeme', 'initData');
	      } else if (index == 3) {
	        this.$invoke('chatTab', 'getList');
	      } else if (index == 4) {
	        this.$invoke('notify', 'initData');
	      }
	    },
	    initLike() {
	      this.$invoke('ilike', 'initData');
	    },
	    initChat() {
	      var selToID = ''; // 会话列表不设置对方私聊账号
	      webimhandler.init({
	        // 初始化的方法
	        accountMode: 0,
	        accountType: Config.accountType,
	        sdkAppID: Config.sdkappid,
	        selType: webim.SESSION_TYPE.C2C // 私聊
	      });
	      if (webim.checkLogin()) {
	        // 检查是否登录返回true和false,不登录则重新登录
	        console.log('已登录');
	        this.initRecentContactList();
	      } else {
	        console.log('登录成功');
	        // 当前用户身份
	        var loginInfo = {
	          sdkAppID: Config.sdkappid, // 用户所属应用id,必填
	          accountType: Config.accountType, // 用户所属应用帐号类型，必填
	          identifier: wx.getStorageSync('identifier'), // 当前用户ID,必须是否字符串类型，选填
	          identifierNick: wx.getStorageSync('profile').nick_name, // 当前用户昵称，选填
	          userSig: wx.getStorageSync('tencent_token'), // 当前用户身份凭证，必须是字符串类型，选填
	          headurl: wx.getStorageSync('profile').icon
	        };
	        // 监听连接状态回调变化事件
	        var onConnNotify = function(resp) {
	          switch (resp.ErrorCode) {
	            case webim.CONNECTION_STATUS.ON:
	              webim.Log.warn('连接状态正常...');
	              break;
	            case webim.CONNECTION_STATUS.OFF:
	              webim.Log.warn(
	                '连接已断开，无法收到新消息，请检查下你的网络是否正常'
	              );
	              break;
	            default:
	              webim.Log.error('未知连接状态,status=' + resp.ErrorCode);
	              break;
	          }
	        };

	        // 监听事件
	        var listeners = {
	          onConnNotify, // 监听连接状态回调变化事件,必填
	          onMsgNotify
	        };
	        var options = {
	          isAccessFormalEnv: true, // 是否访问正式环境，默认访问正式，选填
	          isLogOn: true // 是否开启控制台打印日志,默认开启，选填
	        };
	        Event.listen('msgDetect', msg => {
	          this.initUnreadMsgCount(this, msg);
	        });

	        webimhandler.sdkLogin(loginInfo, listeners, options, () => {
	          this.initRecentContactList();
	          webim.syncMsgs(onMsgNotify);
	        });
	      }
	    }
	  };

	  events = {};

	  watch = {};

	  computed = {};

	  onLoad() {
	    this.scrollHeight = wx.getSystemInfoSync().windowHeight - 84;
	    Event.listen('send', () => {
	      this.initRecentContactList();
	    });
	    Event.listen('tab', tab => {
	      this.tabIndex = tab;
	      console.log('tab', tab);
	      if (tab == 1) {
	        this.$invoke('ilike', 'initData');
	      }
	      //   if (tab == 2) {
	      //       this.$invoke('like', 'initData');
	      //   }
	      this.$apply();
	    });
	    // this.$invoke('ilike', 'initData');
	    this.$apply();
	  }
	  // 初始化聊天界面最近会话列表
	  initRecentContactList() {
	    var that = this;
	    // wx.showLoading();
	    webim.getRecentContactList(
	      {
	        // 获取会话列表的方法
	        Count: 100 // 最近的会话数 ,最大为 100
	      },
	      function(resp) {
	        wx.hideLoading();
	        // console.log('resp:' + JSON.stringify(resp));
	        if (resp.SessionItem) {
	          if (resp.SessionItem.length == 0) {
	            that.setData({
	              isNoData: false
	            });
	          } else {
	            that.$invoke('chatTab', 'getChatList', resp.SessionItem);
	            // that.initUnreadMsgCount(that, null, true);
	          }
	        }
	      },
	      function(resp) {
	        // 错误回调
	      }
	    );
	  }
	  // 初始化最近会话的消息未读数（这个方法用不到，多余，这是个坑，登录之后仍然返回空对象）
	  initUnreadMsgCount(that, msg, init = false) {
	    console.warn('这是未读信息的位置!!!!!!');
	    var sessMap = webim.MsgStore.sessMap();
	    console.log(sessMap);
	    var sess = null;
	    that.$invoke('chatTab', 'receivingMsg', sessMap, msg || {}, init);
	  }
	}
</script>

<style lang='less' scoped>
	.container {
	  width: 100%;
	  .tabs {
	    width: 690rpx;
	    display: flex;
	    margin-left: 30rpx;
	    justify-content: space-between;
	    .tab {
	      width: 157rpx;
	      height: 64rpx;
	    }
	  }
	}
	.msg-con {
	  width: 100%;
	  height: auto;
	  background: #ffffff;
	  padding: 0px 10px;
	  box-sizing: border-box;
	}
	.service-msg {
	  width: 100%;
	  height: 70px;
	}
	.msg-item {
	  border-top: 1px solid #e5e5e5;
	}
	.service-avatar {
	  width: 50px;
	  height: 50px;
	  background: #69beff;
	  margin: 10px 0;
	  border-radius: 50%;
	}
	.msg-avatar {
	  width: 50px;
	  height: 50px;
	  margin: 10px 0;
	  border-radius: 50%;
	}
	.msg-text {
	  margin-top: 12px;
	}
	.name {
	  font-size: 16px;
	  color: #333333;
	  height: 25px;
	}
	.name.s {
	  height: 70px;
	  line-height: 70px;
	}
	.text {
	  color: #999999;
	  font-size: 13px;
	  position: relative;
	}
	.icon-kefu::before {
	  width: 50px;
	  height: 50px;
	  line-height: 50px;
	  display: block;
	  color: #ffffff;
	  text-align: center;
	  font-size: 60rpx;
	}
	.count {
	  width: 20px;
	  height: 20px;
	  background: #f74c31;
	  border-radius: 50%;
	  line-height: 20px;
	  display: block;
	  color: #ffffff;
	  text-align: center;
	  position: absolute;
	  right: 0px;
	  top: 0;
	}
	button {
	  color: #333333;
	  position: absolute;
	  top: 0;
	  left: 0;
	  z-index: 1;
	  width: 100%;
	  height: 100%;
	  background: rgba(0, 0, 0, 0);
	}
	button:after {
	  border: none;
	}
	.service-msg {
	  position: relative;
	}
</style>
