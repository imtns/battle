<!--  -->
<template>
    <view class='wapper'>
        <view class="step-info">
            <view class="num">1.</view>编辑资料
        </view>
        <view class="form">
            <view class="field">
                <view class="label">昵称:</view>
                <input class="input" @change="onChangeName" label="用户名" placeholder="请输入昵称" />
            </view>
            <view class="field">
                <view class="label">性别:</view>
                <view class="sex-container">
                    <view class="male button" @tap="choose(1)">
                        <image src="../../images/reg/male{{gender==1?'-active':''}}.png" mode="aspectFill"></image>
                    </view>
                    <view class="female button" @tap="choose(2)">
                        <image src="../../images/reg/female{{gender == 2?'-active':''}}.png" mode="aspectFill"></image>
                    </view>
                </view>
            </view>
            <picker mode="date" value="{{currentDate}}" start="1970-01-01" end="{{ currentDate }}" bindchange="bindDateChange">
                <view class="field">
                    <view class="label">生日:</view>
                    <input class="input" value="{{ currentDate }}" readonly placeholder="" />
                    <image class="icon" src="../../images/reg/birth-icon.png" mode="aspectFill"></image>
                </view>
            </picker>
        </view>
        <button size="large" class="btn" @tap="next">下一步</button>
    </view>
</template>

<script>
import wepy from 'wepy';
import { post } from '@/utils/request.js';
export default class Profile extends wepy.component {
    props = {
        userInfo: {
            type: Object,
            default: {}
        },
    };

    data = {
        gender: 0,
        show: false,
        currentDate: '',
        nickName: ''
    };

    components = {};

    methods = {
        onChangeName(event) {
            console.log(event.detail);
            this.nickName = event.detail.value;
        },
        choose(gender) {
            console.log(gender);
            this.gender = gender;
            this.$apply();
        },
        onClickIcon() {
            this.show = true;
        },
        onClose() {
            this.show = false;
        },
        birthConfirm() {
            this.show = false;
            this.$apply();
        },
        bindDateChange(event) {
            console.log(event);
            this.currentDate = event.detail.value;
        },
        next() {
            const data = {
                nick_name: this.nickName,
                gender: this.gender == 1 ? 'male' : 'female',
                birthday: this.currentDate
            };
            wepy.setStorageSync('reg_profile', data);

            console.log(data);
            this.$emit('changeStep',3)
        }
    };

    events = {};

    watch = {};

    computed = {};
}
</script>

<style lang='less' scoped>
.wapper {
    width: 556rpx;
    margin: 60rpx auto 0;
    text-align: center;
    .van-cell {
        padding: 10rpx 0 !important;
    }
    .step-info {
        display: flex;
        justify-content: flex-start;
        font-size: 36rpx;
        font-weight: 600;
        color: rgba(0, 0, 0, 1);
        .num {
            width: 51rpx;
            height: 51rpx;
            text-align: center;
            line-height: 51rpx;
            background: rgba(28, 28, 28, 1);
            border-radius: 50%;
            color: white;
            font-weight: 600;
            font-size: 36rpx;
            margin-right: 21rpx;
        }
    }
    .form {
        .field {
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: relative;
            margin-top: 105rpx;
            font-size: 28rpx;
            color: rgba(0, 0, 0, 1);
            text-align: left;
            .label {
                width: 84rpx;
                font-weight: 600;
            }
            .icon {
                width: 40rpx;
                height: 40rpx;
                position: absolute;
                right: 15rpx;
            }
            .input {
                width: 481rpx;
                height: 80rpx;
                border: 2rpx solid rgba(0, 0, 0, 1);
                box-sizing: border-box;
                padding-left: 24rpx;
            }
            .sex-container {
                width: 479rpx;
                .button {
                    display: inline-block;
                    width: 211rpx;
                    height: 80rpx;
                    &:nth-child(1) {
                        margin-right: 52rpx;
                    }
                }
            }
        }
    }
    button {
        width: 394rpx;
        height: 84rpx;
        margin: 0 auto;
        line-height: 84rpx;
        font-weight: 600;
        border-radius: 0;
        font-size: 28rpx;
        color: rgba(252, 252, 252, 1);
        background: rgba(0, 0, 0, 1);
        opacity: 1;
        margin-top: 210rpx;
    }
    image {
        width: 100%;
        height: 100%;
    }
}
</style>
