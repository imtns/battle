<!--  -->
<template>
  <image wx:for="{{ imgLoadList }}" wx:key="*this" item="item" src="{{ item.image }}" data-from="{{item.from}}" data-src="{{ item }}" bindload="_imgOnLoad" binderror="_imgOnLoadError"  style="width:0;height:0;opacity:0"/>
</template>

<script>
  import wepy from 'wepy';
  import { Event } from '@/utils/event.js';
  export default class ImageLoader extends wepy.component {
      props = {};

      data = {
          imgLoadList: [],
          imgInfo: {},
          callbacks: {}
      };

      components = {};

      methods = {

          _imgOnLoad(ev) {
              let src = ev.currentTarget.dataset.src;
              let width = ev.detail.width;
              let height = ev.detail.height;
        // 记录已下载图片的尺寸信息
            //   this.imgInfo[src] = { width, height };
            //   this._removeFromLoadList(src);

            //   this._runCallback(null, src);
              src.loaded = true;
              this.$emit('getLoadedImage', src);
            //   this.imgLoadList.forEach((item, index) => {
            //       console.log(this.imgLoadList);
            //       if (item._id === src._id) {
            //           this.imgLoadList.splice(index, 1);
            //       }
            //   });
              this.$apply();
          },

          _imgOnLoadError(ev) {
              let src = ev.currentTarget.dataset.src;
              this._removeFromLoadList(src);
              this._runCallback('Loading failed', src);
          }

      };
      load(src, name, callback) {
          if (!src) return;
          src.from = name;
          let list = this.imgLoadList;
          let imgInfo = this.imgInfo[src];
          if (callback) { this.callbacks[src] = callback; };
        // 已经加载成功过的，直接回调
          if (imgInfo) {
              this._runCallback(null, src);

        // 新的未在下载队列中的
          } else if (list.indexOf(src) == -1) {
              list.push(src);
              this.imgLoadList = list;
              this.$apply();
          }
      }
          // 将图片从下载队列中移除
      _removeFromLoadList(src) {
          let list = this.imgLoadList;
          list.splice(list.indexOf(src), 1);
          this.imgLoadList = list;
          this.$apply();
      }

    // 执行回调
      _runCallback(err, data) {
          let callback = this.callbacks[data.src] || this.defaultCallback;
          this.$emit('getLoadedImage', data);
          delete this.callbacks[data.src];
      }

      watch = {};

      computed = {};

      onLoad() {
          Event.listen('imageLoader', (imgList) => {
              imgList.a.forEach((item, index) => {
                  this.load(item, 'a');
              });
              imgList.b.forEach((item, index) => {
                  this.load(item, 'b');
              });
          });
      };

      onShow() { };
  }
</script>

<style lang='less' scoped>

</style>
