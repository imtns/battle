<!--  -->
<template>
    <scroll-view scroll-y class='discover' bindscrolltolower="pageTuring">
        <topBanner></topBanner>
        <view class="content-search">
            <van-tabs class="tabs" bind:change="onChange" v-model="activeIndex">
                <van-tab title="全部"></van-tab>
                <van-tab title="同城"></van-tab>
            </van-tabs>
            <view class="change" @tap="sbowshowGender">筛选</view>
        </view>
        <view class="card">
            <block wx:if="{{momentList.length}}">
                <momentCard></momentCard>
            </block>
            <block wx:else>
                <empty></empty>
            </block>
        </view>
        <image class="make-photo" src="../../images/discover/discover-add.png" @tap="mkPhoto"></image>
    </scroll-view>
    <!--筛选的弹窗-->
    <van-popup class="warn-pop" show="{{ showGender }}" position="bottom" close-on-click-overlay="{{ true }}">
        <view class="warn" @tap="genderBy('')">全部</view>
        <view class="warn" @tap="genderBy('same')">只看同性</view>
        <view class="warn" @tap="genderBy('not')">只看异性</view>
        <view class="warn last" @tap="closeshowGender">取消</view>
    </van-popup>
</template>

<script>
import { get } from '@/utils/request';
import { DISCOVER_MOMENT_LIST } from '@/utils/url.js';
import wepy from 'wepy';
import { toast } from '@/utils';
import topBanner from '@/components/discover/topBanner';
import momentCard from '@/components/discover/momentCard';
import empty from '@/components/empty';

let nomore = false;
export default class Discover extends wepy.component {
    data = {
        showGender: false,
        momentList: [],
        page: 1,
        same_city: 0,
        opposite: '',
    };

    components = {
        topBanner,
        momentCard,
        empty,
    };
    onClose() {
        this.show = false;
    }

    watch = {};

    computed = {};

    onChange(event) {
        console.log('event.detail.index', event.detail.index);
        const { index } = event.detail;
        if (+index === 0) {
            this.same_city = 0;
            this.methods.initList.call(this, {
                page: 1,
                same_city: 0,
            });
        } else if (+index === 1) {
            this.same_city = 1;
            this.methods.initList.call(this, {
                page: 1,
                same_city: 1,
            });
        }
        this.$apply();
    }
    
    methods = {
        genderBy(opposite) {
            const same_city = this.same_city;
            this.methods.initList.call(this, {
                page: 1,
                same_city,
                opposite,
            });
            this.showGender = false;
        },
        onChange(event) {
            console.log('event.detail.index', event.detail.index);
            const { index } = event.detail;
            if (+index === 0) {
                this.methods.initList.call(this, {
                    page: 1,
                    same_city: 0,
                });
            } else if (+index === 1) {
                this.methods.initList.call(this, {
                    page: 1,
                    same_city: 1,
                });
            }
        },
        closeshowGender() {
            this.showGender = false;
        },
        sbowshowGender() {
            this.showGender = true;
        },
        mkPhoto() {
            wepy.navigateTo({
                url: 'fabu/fabu'
            });
        },
        async initList({ page = 1, same_city = 0, opposite = '' }) {
            if (nomore) return;
            // 请求动态列表
            // todo，全国和同城这个接口还没有弄好
            // const latitude = wepy.getStorageSync('latitude');
            // const longitude = wepy.getStorageSync('longitude');
            console.log('动态列表', this.momentList);
            if(page == 1){
                this.momentList = [];
                this.$apply();
            }
            const List = await get(DISCOVER_MOMENT_LIST, {
                page,
                same_city,
                opposite,
            });
            if (!List.length) {
                nomore = true;
                toast('已经没有更多了~');
            }
            this.momentList = this.momentList.concat(List);
            console.log('动态列表', this.momentList);
            this.$invoke('momentCard', 'setMomentList', this.momentList);
            this.$apply();
        },
        pageTuring() {
            this.methods.initList.call(this, {
                page: (this.page += 1)
            });
            console.log(this.methods.initList);
        }
    };
    onLoad() {

    }

    onShow() {}
}
</script>

<style lang='less'>
.warn-pop {
    .warn {
        height: 120rpx;
        text-align: center;
        font-size: 32rpx;
        font-weight: 600;
        line-height: 120rpx;
        color: rgba(0, 0, 0, 1);
        border-bottom: 1px solid rgba(226, 225, 225, 1);
    }
}
.discover {
    height: 100vh;
    .make-photo {
        display: block;
        position: fixed;
        width: 110rpx;
        height: 110rpx;
        bottom: 145rpx;
        right: 22rpx;
    }
    .card {
        padding-bottom: 20vh;
    }
    .content-search {
        display: flex;
        justify-content: space-between;
        padding: 0 30rpx;
        .tabs {
            width: 230rpx;
            .van-tab--active {
                font-size: 42rpx !important;
                font-weight: 600 !important;
                z-index: 1;
            }
            .van-tabs__line {
                width: 77rpx !important;
                height: 10rpx !important;
                bottom: 28% !important;
            }
        }
        .change {
            line-height: 44px;
            color: rgba(158, 157, 157, 1);
            font-size: 14px;
        }
    }
}
</style>
