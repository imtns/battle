<!--  -->
<template>
	<navbar title="喜欢我的">
	</navbar>
	<block wx:if="{{!list.length}}">
		<empty></empty>
	</block>
	<view class='container' wx:else>
		<repeat for="{{list}}" key="index" index="index" item="item">
			<view class="box">
				<view class="content">
					<image class="avatar" @tap="goProfile({{item._id}})" src="{{item.avatar}}?x-oss-process=image/resize,w_100,h_100/format,jpg" mode="scaleToFill"></image>
					<view class="info">
						<view class="name">{{item.nick_name}} {{item.age}}</view>
						<view class="city">{{item.province}} {{item.city}}</view>
					</view>
					<image class="icon" src="https://images.facedog.cn/public/likeme/heart.png" @tap="agree({{item}})" mode="scaleToFill" lazy-load="false">
					</image>
				</view>
			</view>
		</repeat>
	</view>
</template>

<script>
	import wepy from 'wepy';

	import { getAge } from '@/utils';
	import { get, post } from '@/utils/request';
	import empty from '@/components/empty';
	import { LIKE_ME, AGREE_FRIEND, MAKEFRIEND } from '@/utils/url';
	export default class LikeMe extends wepy.page {
	  config = {
	    navigationBarTitleText: '',
	    usingComponents: {
	      navbar: '../../components/navbar/index'
	    }
	  };

	  data = {
	    list: []
	  };

	  components = {
		  empty
	  };

	  methods = {
	    async agree(user) {
	    //   await get(AGREE_FRIEND, {
	    //     user_id: user._id
	    //   });
	      //   await post(MAKEFRIEND, {
	      //     to_be: 'friend',
	      //     user_id: user._id,
	      //   });
	      wx.navigateTo({
	        url: `/pages/chat/becomeFriend?id=${user.dentifier}&nick=${
	          user.nick_name
	        }&icon=${encodeURI(
	          `${user.avatar}?x-oss-process=image/resize,w_100,h_100/format,jpg`
	        )}`
	      });
	    },
	    goProfile(id) {
	      console.log(id);
	      wx.navigateTo({
	        url: `../battle/profile?id=${id}`,
	        success: result => {},
	        fail: () => {},
	        complete: () => {}
	      });
	    }
	  };

	  events = {};

	  watch = {};

	  computed = {};

	  onLoad() {
	    this.initData();
	  }
	  async initData() {
	    const result = await get(LIKE_ME);
	    // this.list = result;
	    // console.warn(this.list);
	    result.forEach(item => {
	      this.list.push(...item.users);
	      //   item.day = item.date_time.split('-')[2];
	      //   item.month = new Date(item.date_time).toDateString().split(' ')[1];
	      //   item.users.forEach(t => {
	      //     t.age = getAge(t.birthday);
	      //   });
	    });
	    this.$apply();
	  }
	  onShow() {}
	}
</script>

<style lang='scss'>
	page {
	  background: #f7f7f7;
	}
	.container {
	  display: flex;
	  flex-wrap: wrap;
	  justify-content: center;
	  padding-top: 10rpx;
	  .box {
	    width: 722rpx;
	    background: white;
	    margin: 10rpx 0;
	    .content {
	      display: flex;
	      justify-content: space-between;
	      align-items: center;
	      padding: 25rpx 0;
	    }
	    .avatar {
	      width: 157rpx;
	      height: 157rpx;
	      border-radius: 50%;
	      border: 4rpx solid #f25458;
	      position: relative;
	      margin-left: 30rpx;
	      &::before {
	        border: 5rpx solid white;
	        content: '';
	        display: block;
	        position: absolute;
	        border-radius: 50%;
	        top: 0rpx;
	        left: 0rpx;
	        right: 0rpx;
	        bottom: 0rpx;
	      }
	    }
	    .info {
	      margin-right: auto;
	      margin-left: 20rpx;
	      .name {
	        font-size: 31rpx;
	        color: #000;
	      }
	      .city {
	        color: #a2a7b2;
	        font-size: 25rpx;
	      }
	    }
	    .icon {
	      width: 149rpx;
	      height: 149rpx;
	      margin-right: 30rpx;
	    }
	  }
	}
</style>
