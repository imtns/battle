<!--  -->
<template>
	<navbar title="聊天室">
	</navbar>
	<view class='container'>
		<view class="room room1" style="z-index:3" @tap="goRoom(1)">
			<image src="https://images.facedog.cn/mp/chat/room2.png" mode="scaleToFill" lazy-load="false">
			</image>
			<view>已加入{{list.room1 + 150}}人</view>
		</view>
		<view class="room room2" style="z-index:2" @tap="goRoom(2)">
			<image src="https://images.facedog.cn/mp/chat/room1.png" mode="scaleToFill" lazy-load="false">
			</image>
			<view>已加入{{list.room2 + 150}}人</view>
		</view>
		<view class="room room3" style="z-index:1" @tap="goRoom(3)">
			<image src="https://images.facedog.cn/mp/chat/room3.png" mode="scaleToFill" lazy-load="false">
			</image>
			<view>已加入{{list.room3 + 150}}人</view>
		</view>
	</view>
	<block wx:if="{{showVerify}}">
		<verify />
	</block>
</template>

<script>
import wepy from 'wepy';
import Config from '@/utils/config';
import { get, post } from '@/utils/request';
import { ROOM_COUNT } from '@/utils/url';
import { Event } from '@/utils/event.js';
import { VerifyControl } from '@/utils';
import verify from '@/components/pop/verify/index';
export default class ChatRoomList extends wepy.page {
  config = {
    navigationBarTitleText: '',
    usingComponents: {
      navbar: '../../components/navbar/index',
    },
  };

  data = {
    list: [],
    showVerify: false,
  };

  components = {
    verify,
  };
  async fetchData() {
    this.list = await get(ROOM_COUNT);
    this.$apply();
  }
  methods = {
    goRoom(room) {
      if (!VerifyControl('N')) return;
      if (room == 1) {
        Config.avChatRoomId = Config.avChatRoom1;
      } else if (room == 2) {
		if (!VerifyControl('R')) return;
        Config.avChatRoomId = Config.avChatRoom2;
      } else {
        Config.avChatRoomId = Config.avChatRoom3;
      }
      wepy.navigateTo({ url: `chatRoom?type=room${room}` });
    },
  };

  events = {};

  watch = {};

  computed = {};

  onLoad() {
    Event.listen('showVerify', (status, type) => {
      this.showVerify = status;
      if (type) this.$invoke('verify', 'setValue', type);
      this.$apply();
    });
  }

  onShow() {
    this.fetchData();
  }
}
</script>

<style lang='scss'>
	.container {
	  position: relative;
	  width: 100%;
	  padding-top: 20rpx;
	  .room {
	    width: 674rpx;
	    height: 325rpx;
	    margin: 0 auto;
	    position: relative;
	    &.room1 view {
	      right: 63rpx;
	      bottom: 103rpx;
	    }
	    &.room2 view {
	      left: 47rpx;
	      bottom: 103rpx;
	    }
	    &.room3 view {
	      right: 62rpx;
	      bottom: 103rpx;
	    }
	    view {
	      position: absolute;
	      background: rgba(255, 255, 255, 1);
	      border-radius: 22rpx;
	      border: 3rpx solid rgba(0, 0, 0, 1);
	      padding: 5rpx 10rpx;
	      display: inline-block;
	      font-size: 24rpx;
	    }
	    image {
	      width: 100%;
	      height: 100%;
	    }
	    &:nth-child(2) {
	      top: -30rpx;
	    }
	    &:nth-child(3) {
	      top: -50rpx;
	    }
	  }
	}
</style>
