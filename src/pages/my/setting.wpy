<!--  -->
<template>
    <view class='wrapper'>
        <view class='item'>
            <view class="title">只看异性</view>
            <view class="detail2">
                <van-switch checked="{{ opposite_sex }}" @change="onChange('opposite_sex')" active-color="#090909" inactive-color="#cfcfcf" size="24rpx" />
            </view>
        </view>
        <view class="line"></view>
        <view class='item'>
            <view class="title">只看同城</view>
            <view class="detail2">
                <van-switch checked="{{ in_city }}" @change="onChange('in_city')" active-color="#090909" inactive-color="#cfcfcf" size="24rpx" />
            </view>
        </view>
        <view class="line"></view>
        <view class='item'>
            <view class="title">不参加颜值battle</view>
            <view class="detail2">
                <van-switch checked="{{ no_battle }}" @change="onChange('no_battle')" active-color="#090909" inactive-color="#cfcfcf" size="24rpx" />
            </view>
        </view>
        <view class="line"></view>
        <view class="item">
            <view class="title">加入我们</view>
            <view class="detail2">
                <van-icon name="arrow" />
            </view>
        </view>
        <view class="line"></view>
        <view class="item">
            <view class="title">修改密码</view>
            <view class="detail2">
                <van-icon name="arrow" />
            </view>
        </view>
        <view class="line"></view>
    </view>
    <view class="logout" @tap="logout">退出登录</view>
</template>

<script>
import wepy from 'wepy';
import { USER_SETTING } from '@/utils/url';
import { get, put } from '@/utils/request';
export default class Setting extends wepy.page {
    config = {
        navigationBarTitleText: '设置',
        disableScroll: true,
        usingComponents: {
            'van-button': '../../components/vant/button/index',
            'van-icon': '../../components/vant/icon/index',
            'van-switch': '../../components/vant/switch/index'
        }
    };

    data = {
        opposite_sex: false,
        in_city: false,
        no_battle: false
    };

    components = {};

    methods = {
        async onChange(name, { detail }) {
            console.log(detail);
            console.log(name);
            // 需要手动对 checked 状态进行更新
            this[name] = detail;
            this.$apply();
            await put(USER_SETTING,this.data)
        },
        logout() {
            console.log('out');
        }
    };

    events = {};

    watch = {};

    computed = {};

    async onLoad() {
        const result = await get(USER_SETTING);
        this.city = result.in_city;
        this.gender = result.opposite_sex;
        this.battle = result.no_battle;
        this.$apply();
    }

    onShow() {}
}
</script>

<style lang='less'>
.van-switch {
    width: 91rpx !important;
    height: 19rpx !important;
}
.van-switch__node {
    width: 40rpx !important;
    height: 40rpx !important;
    top: 50% !important;
    transform: translateY(-50%);
    left: -10rpx !important;
}
.van-switch--on .van-switch__node {
    transform: translate(160%, -50%) !important;
}
.hr {
    width: 100%;
    height: 18rpx;
    background: rgba(246, 246, 246, 1);
}

.item {
    display: flex;
    flex-direction: row;
    height: 120rpx;
    align-items: center;
    padding: 0 60rpx;
    .title {
        font-size: 28rpx;
        font-family: PingFang SC;
        font-weight: 600;
        color: rgba(0, 0, 0, 1);
    }
}

.detail2 {
    font-size: 30rpx;
    position: absolute;
    right: 60rpx;
    color: rgba(178, 178, 178, 1);
}

.line {
    width: 630rpx;
    margin: 0 auto;
    border: 1rpx solid rgba(226, 225, 225, 0.5);
}
.logout {
    margin-top: 66rpx;
    color: #df0010;
    font-size: 28rpx;
    text-align: center;
    width: 100%;
}
</style>
