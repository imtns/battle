<!--  -->
<template>
    <view class="rank-page">
        <view class="rank-search">
            <van-tabs class="tabs" bind:change="onChange">
                <van-tab title="全部"></van-tab>
                <van-tab title="同城"></van-tab>
                <van-tab title="星座" title-style="{{showConstellation ? 'background:url(../../images/rank/rank-down.png) no-repeat right center; background-size: 23rpx 20rpx;' : 'background:url(../../images/rank/rank-down.png) no-repeat right center; background-size: 23rpx 20rpx;'}}"></van-tab>
            </van-tabs>
            <block wx:if="{{showConstellation}}">
                <Constellation @getRankListByXZ.user="getRankListByXZ"></Constellation>
            </block>
        </view>
        <rankList :top3.sync="top3" :topOthers.sync="topOthers"></rankList>
        <image class="menu" mode="aspectFill" src="../../images/profile/menu.png" @tap="showchangeGenderPop"></image>
        <view class="drawer_screen" catchtouchmove="myCatchTouch" wx:if="{{changeGenderPop}}">
            <view class="drawer-btn" @tap="changeGender">
                <image src="../../images/rank/rank-change-gender.png" mode="aspectFill" class="btn"></image>
                <view class="textWrap">
                    <view>切换性别</view>
                </view>
            </view>
            <view class="drawer-btn" @tap="toMyRank">
                <image src="../../images/rank/rank-my-rank.png" mode="aspectFill" class="btn"></image>
                <view class="textWrap">
                    <view>我的排名</view>
                </view>
            </view>
            <image src="../../images/profile/close.png" mode="aspectFill" class="layer-close" @tap="hidechangeGenderPop"></image>
        </view>
    </view>
</template>
<script>
import wepy from 'wepy';
import { get } from '@/utils/request';
import { RANK_LIST } from '@/utils/url';
import rankList from '@/components/rank/rankList';
import Constellation from '@/components/rank/Constellation';
export default class fabu extends wepy.page {
    config = {
        navigationBarTitleText: '排行榜',
        usingComponents: {
            'van-tabs': '../../components/vant/tabs/index',
            'van-tab': '../../components/vant/tab/index'
        }
    };
    data = {
        all: [1, 2, 3, 4, 5, 6, 7],
        top3: [],
        topOthers: [],
        showConstellation: false,
        gender: 'female',
        changeGenderPop: false
    };

    components = {
        rankList,
        Constellation
    };

    myCatchTouch() {
        return;
    }
    onChange(event) {
        console.log('event.detail.index', event.detail.index);
        const { index } = event.detail;
        if (+index === 2) {
            // 点击星座tab
            this.showConstellation = true;
        } else if (+index === 1) {
            // 点击同城
            this.showConstellation = false;
            this.getRankList({
                by: '',
                gender: this.gender
            });
        } else if (+index === 0) {
            // 点击全国
            this.showConstellation = false;
            this.getRankList({
                by: 'all',
                gender: this.gender
            });
        }
    }

    getTabStyle() {
        return 'background:red';
    }

    methods = {
        async getRankListByXZ(obj) {
            this.showConstellation = false;
            await this.getRankList(obj);
        },
        showchangeGenderPop() {
            this.changeGenderPop = true;
        },
        hidechangeGenderPop() {
            this.changeGenderPop = false;
        },
        changeGender() {
            this.gender = this.gender === 'female' ? 'male' : 'female';
            this.hidechangeGenderPop();
            this.getRankList({
                by: 'all',
                gender: this.gender
            });
        },
        toMyRank() {
            this.hidechangeGenderPop();
            wepy.navigateTo({
                url: `/pages/my/myrank`
            });
        }
    };
    hidechangeGenderPop() {
        this.changeGenderPop = false;
    }
    events = {};

    watch = {};

    computed = {};

    onLoad() {
        this.getRankList({
            by: 'all',
            gender: this.gender
        });
    }

    onShow() {}

    async getRankList({ by = '', gender = '' }) {
        const data = await get(RANK_LIST, {
            by,
            gender: gender || this.gender
        });
        this.top3 = data.filter((x, index) => index <= 2);
        this.topOthers = data.filter((x, index) => index > 2);
        this.$apply();
        console.log(data);
    }
}
</script>

<style lang='less'>
.rank-page {
    .rank-search {
        width: 50vw;
        margin-bottom: 30rpx;
        position: relative;
        .tabs {
            .van-tab--active {
                font-size: 42rpx !important;
                font-weight: 600 !important;
                z-index: 1;
            }
            .van-tabs__line {
                width: 77rpx !important;
                height: 10rpx !important;
                bottom: 28% !important;
            }
        }
    }
    .menu {
        width: 120rpx;
        height: 120rpx;
        border-radius: 100%;
        position: fixed;
        bottom: 8%;
        right: 9%;
    }
    .drawer_screen {
        width: 100%;
        height: 100%;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: 1000;
        background: rgba(6, 6, 6, 0.89);
        overflow: hidden;
        .layer-close {
            width: 170rpx;
            height: 170rpx;
            position: fixed;
            bottom: 67rpx;
            right: 107rpx;
        }
        .drawer-btn {
            display: flex;
            position: fixed;
            bottom: 100rpx;
            width: 300rpx;
            right: 0;
            align-items: center;
            flex-wrap: nowrap;
            margin-right: 60rpx;
            &:nth-child(1) {
                bottom: 418rpx;
            }
            &:nth-child(2) {
                bottom: 247rpx;
            }
            image {
                width: 174rpx;
                height: 174rpx;
                overflow: auto;
            }
            view {
                display: block;
                width: 123rpx;
                font-size: 30rpx;
                color: white;
                font-family: PingFang SC;
                font-weight: 600;
                position: relative;
                top: -4rpx;
            }
        }
    }
}
</style>
