<!--  -->
<template>
    <view class="fabu-page">
        <view class="actions">
            <view class="btn" @tap="prepareToCancle">取消</view>
            <view class="btn" @tap="publish">发布</view>
        </view>
        <view class="inputArea">
            <textarea class="desc" placeholder="请输入内容..." placeholder-style="color:#cccccc;" maxlength="1000" data-type="content" @input="inputDesc" value="{{content}}" />
            <view class="len">{{ content.length + '/1000'}}</view>
        </view>
        <view class="img-box">
            <repeat for="{{uploadedPics}}" key="index" index="index" item="item">
                <view class="imgBox">
                    <image class="items" src="{{item.image_url}}" mode="aspectFill" @tap="preview(item.image_url)"></image>
                    <view class="minus" data-index="{{index}}" @tap="minus">
                        <view class="line"></view>
                    </view>
                </view>
            </repeat>
            <view class="addbtn" @tap="uploadPic" wx:if="{{uploadedPics.length < 6}}">
                <van-icon name="plus" size="25px" custom-style="margin-top:50%;transform:translate3d(0, -50%, 0);"/>
            </view>
        </view>
        <view class="location" @tap="choseLocation">
            <view class="flex">
                <image class="location-icon" src="../../images/fabu/fabu-location.png" ></image>
                <view class="location-address">{{ region || '您的位置' }}</view>
            </view>
            <view class="icon">
                <van-icon name="arrow" color="#B2B2B2"/>
            </view>
        </view>
    </view>
</template>
<script>
import wepy from 'wepy';
import { post, put } from '@/utils/request';
import { toast } from '@/utils/index';
import { FABU_FABU_MOMENT, FABU_UPLOAD_PIC } from '@/utils/url';
import { Event } from '@/utils/event.js';
export default class fabu extends wepy.page {
    config = {
        navigationBarTitleText: '发布动态',
        usingComponents: {
            'van-icon': '../../components/vant/icon/index'
        }
    };
    data = {
        content: '', // 动态内容
        region: '',
        latitude: '',
        longitude: '',
        // tempFilePaths: [],
        uploadedPics: []
    };

    components = {};

    methods = {
        preview(url) {
            const urls = this.uploadedPics.map(x => x.image_url);
            wepy.previewImage({
                url, // 当前显示图片的http链接
                urls // 需要预览的图片http链接列表
            });
        },
        // 点击取消
        prepareToCancle() {
            wx.showModal({
                title: '提示',
                content: '确认退出吗',
                success (res) {
                    if (res.confirm) {
                        wx.navigateBack({
                            delta: 1
                        });
                    } else if (res.cancel) {
                        console.log('用户点击取消');
                    }
                }
            });
        },
        // 删除照片
        minus(e) {
            const { index } = e.currentTarget.dataset;
            this.uploadedPics.splice(index, 1);
            this.$apply();
        },
        inputDesc(e) {
            this.content = e.detail.value;
        },
        async uploadPic() {
            const { tempFilePaths } = await wepy.chooseImage({ count: 6 });
            if (this.uploadedPics.length + tempFilePaths.length > 6) {
                toast('最多只能上传六张照片！');
                return;
            }
            // this.tempFilePaths = tempFilePaths;
            wepy.showLoading({ title: '上传中', mask: true });
            Promise.all(tempFilePaths.map(x => this.methods.wxUploade(x))).then(
                res => {
                    console.log('上传图片成功', res);
                    wepy.hideLoading();
                    this.uploadedPics = this.uploadedPics.concat(res);
                    this.$apply();
                }
            );
            this.$apply();
        },
        wxUploade(tempFilePath) {
            return new Promise((resolve, reject) => {
                wx.uploadFile({
                    url: 'http://www.molineapp.cn/api/discover/moment/images',
                    filePath: tempFilePath,
                    name: 'image',
                    header: {
                        Authorization: `Bearer ${wx.getStorageSync('token')}`,
                        'Content-Type': 'multipart/form-data'
                    },
                    success(res) {
                        const data = JSON.parse(res.data).data;
                        resolve(data);
                        // do something
                    },
                    fail(res) {
                        reject(res);
                    }
                });
            });
        },
        async choseLocation() {
            const {
                latitude = 0,
                longitude = 0,
                name = '',
                address = ''
            } = await wepy.chooseLocation();
            this.region = name;
            (this.longitude = longitude), (this.latitude = latitude);
            this.$apply();
        },
        async publish() {
            const subData = this.uploadedPics.reduce(
                (sub, file) => {
                    sub.images.push(file.id);
                    return sub;
                },
                {
                    content: this.content,
                    region: this.region,
                    latitude: this.latitude,
                    longitude: this.longitude,
                    images: []
                }
            );
            const data = await post(FABU_FABU_MOMENT, subData);
            toast('发布成功');

            setTimeout(() => {
                Event.trigger('refresh');
                wx.navigateBack({
                    delta: 1
                });
            }, 1500);

            console.log(data);
        }
    };

    events = {};

    watch = {};

    computed = {};

    onLoad() {}

    onShow() {}
}
</script>

<style lang='less' scoped>
.fabu-page {
    padding: 0 30rpx;
    .actions {
        display: flex;
        justify-content: space-between;
        height: 60rpx;
        .btn {
            height: 45rpx;
            font-size: 32rpx;
            font-weight: 600;
            line-height: 60rpx;
            color: rgba(7, 7, 7, 1);
        }
    }
    .inputArea {
        position: relative;
        .desc {
            width: 100%;
            height: 200rpx;
            font-size: 28rpx;
            margin-top: 40rpx;
            line-height: 30rpx;
        }
        .len {
            position: absolute;
            bottom: 0;
            right: 0;
            font-size: 20rpx;
            font-weight: 500;
            line-height: 38rpx;
            color: rgba(165, 165, 165, 1);
        }
    }
    .img-box {
        margin-top: 15rpx;
        display: flex;
        flex-wrap: wrap;
        .addbtn {
            width: 27.8vw;
            height: 214rpx;
            margin: 30rpx 20rpx 0 0;
            border: 1px solid rgba(44, 44, 44, 1);
            text-align: center;
        }
        .imgBox {
            width: 28vw;
            height: 214rpx;
            margin: 30rpx 20rpx 0 0;
            position: relative;
            .items {
                width: 28vw;
                height: 214rpx;
                display: block;
            }
            .minus {
                position: absolute;
                top: -23rpx;
                right: -8rpx;
                width: 46rpx;
                height: 46rpx;
                border-radius: 100%;
                background: rgba(230, 0, 17, 1);
                text-align: center;
                display: flex;
                align-items: center;
                .line {
                    width: 27rpx;
                    height: 4rpx;
                    background: rgba(255, 255, 255, 1);
                    margin: 0 auto;
                }
            }
        }
    }
    .location {
        height: 73rpx;
        border-bottom: 1px solid rgba(226, 225, 225, 1);
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-top: 30rpx;
        .flex {
            display: flex;
            align-items: center;
            .location-icon {
                width: 24rpx;
                height: 31rpx;
                margin-right: 16rpx;
            }
            .location-address {
                font-size: 24rpx;
                font-weight: 500;
                line-height: 38rpx;
                color: rgba(165, 165, 165, 1);
            }
        }
        .icon {
            text-align: right;
        }
    }
}
</style>
