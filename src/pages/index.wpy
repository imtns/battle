<template>
    <view wx:if="{{selectedTab === 0}}">
        <battle />
    </view>
    <view wx:if="{{selectedTab === 1}}">
        <discover />
    </view>
    <view wx:if="{{selectedTab === 2}}">
        <chat />
    </view>
    <view wx:if="{{selectedTab === 3}}">
        <my />
    </view>
    <block wx:if="{{tabbarshow}}">
        <tabbar :tabIndex.sync="selectedTab" />
    </block>
    <van-toast id="van-toast" />
</template>

<script>
import wepy from 'wepy';
import tabbar from '@/components/tabbar';
import battle from '@/components/battle/battle';
import discover from '@/components/discover/discover';
import my from '@/components/my/my';
import chat from '@/components/chat/chat';
import { sleep } from '@/utils';
import testMixin from '@/mixins/test';
import { get } from '@/utils/request';
import { PROFILE } from '@/utils/url';
import { getAge } from '@/utils';
import { Event } from '@/utils/event.js';
// import { toast } from '@/utils';
export default class Index extends wepy.page {
    config = {
        navigationBarTitleText: '颜狗FaceDog',
        // disableScroll: true,
        usingComponents: {
            'van-button': '../components/vant/button/index',
            'van-tabbar': '../components/vant/tabbar/index',
            'van-tabbar-item': '../components/vant/tabbar-item/index',
            'van-dialog': '../components/vant/dialog/index',
            'van-icon': '../components/vant/icon/index',
            'van-tabs': '../components/vant/tabs/index',
            'van-tab': '../components/vant/tab/index',
            'van-popup': '../components/vant/popup/index',
            'van-overlay': '../components/vant/overlay/index',
            'van-swipe-cell': '../components/vant/swipe-cell/index',
            'van-toast': '../components/vant/toast/index'
        }
    };
    components = {
        tabbar,
        battle,
        discover,
        chat,
        my
    };

    data = {
        mynum: 20,
        userInfo: {
            nickName: '加载中...'
        },
        selectedTab: 0,
        tabbarshow: true,
        hide: false,
        user: {}
    };
    computed = {
        now() {
            return +new Date();
        }
    };
    methods = {
        onGotUserInfo(e) {
            console.log(e.detail.errMsg);
            console.log(e.detail.userInfo);
            console.log(e.detail.rawData);
        },
        counterEmit(...args) {
            let $event = args[args.length - 1];
            console.log(
                `${this.$name} receive ${$event.name} from ${$event.source.$name}`
            );
        }
    };
    onPullDownRefresh() {
        console.error('ssss');
    }
    async setProfile() {
        try {
            const data = await get(PROFILE, { loading: false });
            console.error(data);
            data.age = getAge(data.birthday);
            this.profile = data;
            this.profile.images &&
                this.profile.images.forEach(item => {
                    if (item.is_avatar) {
                        this.profile.icon = item.image;
                    }
                });
            this.profile.images = this.switchOrder(this.profile.images);
            wepy.setStorageSync('profile', this.profile);
            this.$invoke('my', 'setProfile', this.profile);
        } catch (e) {
            console.error(e);
            setTimeout(() => {
                wepy.redirectTo({ url: 'home' });
            }, 1500);
        }
    }
    switchOrder(d) {
        var r = [];
        d.forEach(e => {
            if (e['is_avatar']) r.unshift(e);
            else r.push(e);
        });
        return r;
    }
    events = {
        tabSelect: (...args) => {
            let $event = args[args.length - 1];
            this.selectedTab = $event.source.tabIndex;
            if (this.selectedTab == 0) {
                // this.$invoke('chat', 'initChat');
                this.$invoke('battle', 'displayPage', this.hide);
                if (this.hide) this.hide = false;
            }
            if (this.selectedTab == 2) {
                // this.$invoke('chat', 'initChat');
            }
            if (this.selectedTab == 3) {
                // this.$invoke('my', 'setProfile');
            } else if (this.selectedTab == 1) {
                // this.$invoke('discover', 'initList');
                this.$invoke('discover', 'initList');
            }
        },
        unreadSet(num) {
            this.$invoke('tabbar', 'unreadSet', num);
        },
        showtab(status) {
            this.tabbarshow = status;
            this.$apply();
        },
        getProfile() {
            this.setProfile();
        }
    };
    onLoad() {
        this.$invoke('chat', 'initChat');
        Event.listen('refresh', () => {
            this.$invoke('discover', 'initList', { page: 1 });
        });
        this.user = wx.getStorageSync('profile');
        this.setProfile();
    }
    onShareAppMessage() {
        return {
            title: '好看的人才能加入的高颜值社交圈',
            path: `/pages/home?userid=${this.user.ID}`,
            imageUrl: 'https://images.facedog.cn/public/index/54.png',
            success: (res) => {
                console.log('转发成功', res);
            },
            fail: (res) => {
                console.log('转发失败', res);
            }
        };
    }
    onShow() {
        // this.$invoke('chat', 'initChat');
        if (this.selectedTab === 2) {
            this.$invoke('chat', 'initChat');
        } else if (this.selectedTab === 3) {
            this.setProfile();
            // this.$invoke('my', 'setProfile', this.profile);
        }
    }
    onHide() {
        this.hide = true;
    }
}
</script>
