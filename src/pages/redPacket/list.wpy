<!--  -->
<template>
	<navbar title="我喜欢的">
	</navbar>
	<block wx:if="{{!list.length}}">
		<empty></empty>
	</block>
	<view class='container' wx:else>
		<van-tabs active="receive" animated>
			<van-tab title="我收到的" name="receive">
				<repeat for="{{list}}" key="index" index="index" item="item">
					<view class="box">
						<view class="content">
							<image class="avatar" @tap="goProfile({{item.user_id}})" src="{{item.avatar}}?x-oss-process=image/resize,w_100,h_100/format,jpg"></image>
							<view class="info">
								<view class="name">{{item.nick_name}} {{item.age}}</view>
								<view class="city">{{item.province}} {{item.city}}</view>
							</view>
							<image class="redpacket" @tap="redPacketClick({{index}})" src="https://images.facedog.cn/public/redpacket/redpacket-{{index==0?'opened':index==1?'wating':'expired'}}.png" mode="scaleToFill" lazy-load="false"></image>
							<image class="delete" src="https://images.facedog.cn/public/chat/delete.png" @tap="clearFavorites({{item._id}})" mode="scaleToFill" lazy-load="false">
							</image>
						</view>
					</view>
				</repeat>
			</van-tab>
			<van-tab title="我发出的">
				<repeat for="{{list}}" key="index" index="index" item="item">
					<view class="box">
						<view class="content">
							<image class="avatar" @tap="goProfile({{item.user_id}})" src="{{item.avatar}}?x-oss-process=image/resize,w_100,h_100/format,jpg"></image>
							<view class="info">
								<view class="name">{{item.nick_name}} {{item.age}}</view>
								<view class="city">{{item.province}} {{item.city}}</view>
							</view>
							<image class="redpacket" src="https://images.facedog.cn/public/redpacket/redpacket-{{index==0?'opened':index==1?'wating':'expired'}}.png" mode="scaleToFill" lazy-load="false"></image>
							<image class="delete" src="https://images.facedog.cn/public/chat/delete.png" @tap="clearFavorites({{item._id}})" mode="scaleToFill" lazy-load="false">
							</image>
						</view>
					</view>
				</repeat>
			</van-tab>
		</van-tabs>

	</view>
	<van-toast id="van-toast" />
	<van-popup show="{{ showPop }}" bind:close="onClose">
		<notify />
	</van-popup>
</template>

<script>
	import wepy from 'wepy';
	import { get, post } from '@/utils/request';

	import empty from '@/components/empty';
	import Toast from '@/components/vant/toast/toast';
	import notify from '@/components/notify/notify';
	import { MAKEFRIEND, MY_FAVORITE, DELETE_FAVORITE } from '@/utils/url';
	export default class RedPackList extends wepy.page {
	  config = {
	    navigationBarTitleText: '我喜欢的',
	    usingComponents: {
	      navbar: '../../components/navbar/index',
	      'van-toast': '../components/vant/toast/index',
	      'van-tab': '../components/vant/tab/index',
	      'van-tabs': '../components/vant/tabs/index',
	      'van-popup': '../components/vant/popup/index'
	    }
	  };

	  data = {
	    showPop: false,
	    list: [],
	    init: false,
	    nomore: false,
	    show: false,
	    active: 1,
	    redpacketTypeObj: {
	      0: 'coin',
	      1: 'invite',
	      2: 'refund',
	      3: 'agree'
	    },
	    redpacketType: ''
	  };

	  components = {
	    empty,
	    notify
	  };

	  methods = {
	    redPacketClick(index) {
			console.log(index)
		  console.log(this.redpacketTypeObj)
		  this.redpacketType = this.redpacketTypeObj[index];
		  this.$invoke('notify','setType',this.redpacketType)
	      this.showPop = true;
	    },
	    onClose() {
	      this.showPop = false;
	    },
	    goProfile(id) {
	      console.log(id);
	      wx.navigateTo({
	        url: `../battle/profile?id=${id}`,
	        success: result => {},
	        fail: () => {},
	        complete: () => {}
	      });
	    },
	    async clearFavorites(id) {
	      wepy.showLoading({
	        title: '', //提示的内容,
	        mask: true, //显示透明蒙层，防止触摸穿透,
	        success: res => {}
	      });

	      if (id == 'all') {
	        id = [];
	        this.list.forEach(item => {
	          id.push(item._id);
	        });
	      }
	      await post(DELETE_FAVORITE, { id });
	      Toast('删除成功');
	      wepy.hideLoading();
	      this.fetchData();
	    }
	  };
	  onReachBottom() {}
	  events = {
		  closeNotify(){
			  this.showPop = false;
		  }
	  };

	  watch = {};

	  computed = {};

	  onLoad() {
	    this.fetchData();
	  }
	  async fetchData() {
	    this.list = [];
	    const result = await get(MY_FAVORITE, { page: 1 });
	    this.list.push(...result.favorites);
	    this.init = true;
	    this.$apply();
	  }
	  onShow() {}
	}
</script>

<style lang='scss'>
	.van-tabs__wrap {
	  width: 722rpx;
	  margin: auto;
	  height: 100rpx !important;
	}
	.van-tabs__line {
	  width: 68rpx;
	  background-color: #707070 !important;
	}
	.van-ellipsis {
	  font-size: 30rpx;
	  color: #8e8e8e;
	}
	.van-tabs__nav {
	  padding-top: 20rpx;
	}
	page {
	  background: #f7f7f7;
	}
	.container {
	  display: block;
	  width: 100%;
	  margin: 0 auto;
	  .box {
	    width: 722rpx;
	    background: white;
	    margin: 10rpx auto;
	    .content {
	      display: flex;
	      justify-content: space-between;
	      align-items: center;
	      padding: 25rpx 0;
	    }
	    .avatar {
	      width: 157rpx;
	      height: 157rpx;
	      border-radius: 50%;
	      border: 4rpx solid #5cd4d4;
	      position: relative;
	      margin-left: 30rpx;
	      &::before {
	        border: 5rpx solid white;
	        content: '';
	        display: block;
	        position: absolute;
	        border-radius: 50%;
	        top: 0rpx;
	        left: 0rpx;
	        right: 0rpx;
	        bottom: 0rpx;
	      }
	    }
	    .info {
	      margin-right: auto;
	      margin-left: 20rpx;
	      .name {
	        font-size: 31rpx;
	        color: #000;
	      }
	      .city {
	        color: #a2a7b2;
	        font-size: 25rpx;
	      }
	    }

	    .icon {
	      width: 119rpx;
	      height: 119rpx;
	      margin-right: 20rpx;
	    }
	    .redpacket {
	      width: 119rpx;
	      height: 128rpx;
	    }
	    .delete {
	      width: 43rpx;
	      height: 43rpx;
	      margin-right: 60rpx;
	    }
	  }
	}
</style>
