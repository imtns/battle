<!--  -->
<template>
    <view>
        <view class='wrapper'>
            <view class="thumb">
                <image src="https://images.facedog.cn/public/profile/model.jpg" mode="aspectFill"></image>
            </view>
            <view class="text">请对着摄像头读出：</view>
            <view class="word">“颜狗认证，{{number}}”</view>
            <form report-submit='true' bindsubmit='submitForm'>
                <button class="button" form-type='submit' @tap="uploadVideo">开始录制</button>
            </form>
        </view>
        <van-toast id="van-toast" />
        <van-dialog id="van-dialog" />
    </view>
</template>

<script>
import wepy from 'wepy';
import { uploader } from '@/utils/uploader';
import Toast from '@/components/vant/toast/toast';
import { post } from '@/utils/request';
import Dialog from '@/components/vant/dialog/dialog';
import { SUBMIT_FORMID } from '@/utils/url';
export default class UploadVide extends wepy.page {
    config = {
        navigationBarTitleText: '视频认证',
        // disableScroll: true,
        usingComponents: {
            'van-toast': '../../components/vant/toast/index',
            'van-dialog': '../../components/vant/dialog/index'
        }
    };
    data = {
        video: {},
        number: 0,
        wechat: ''
    };

    components = {};
    RondomPass(number) {
        let val = 0;
        var arr = new Array();
        var arr1 = new Array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9');

        for (var i = 0; i < number; i++) {
            var n = Math.floor(Math.random() * 10);
            arr[i] = arr1[n];
            // document.write(arr1[n]);
        }

        val = arr.join('');
        // document.write(val);
        return val;
    }
    methods = {
        async submitForm(e) {
            console.warn(this.currentDate);
            wepy.setStorageSync('birthday', this.currentDate);
            await post(SUBMIT_FORMID, {
                formId: e.detail.formId
            });
        },
        async uploadVideo() {
            try {
                console.log('ssss');
                const tempFilePath = await this.record();
                Dialog.confirm({
                    confirmButtonText: '确认',
                    cancelButtonText: '重录',
                    message: '录制完成,确认发送么?'
                })
                    .then(() => {
                        this.goUpload(tempFilePath);
                    })
                    .catch(() => {
                        this.methods.uploadVideo.bind(this)();
                    });
            } catch (e) {}
        }
    };
    async record() {
        return new Promise(async (resolve, reject) => {
            const { tempFilePath } = await wepy.chooseVideo({
                camera: 'front',
                sourceType: ['camera']
            });
            resolve(tempFilePath);
        });
    }
    goUpload(tempFilePath) {
        // console.error(this.number);
        // console.error(this.wechat);
        try {
            uploader(
                tempFilePath,
                {
                    isVideo: true,
                    data: {
                        code: this.number,
                        wechat: this.wechat
                    },
                    name: 'files'
                },
                async result => {
                    if (result == 'ok') {
                        Dialog.alert({
                            message:
                                '认证将于1个工作日内完成,你可以在我的页面查看进度',
                            confirmButtonText: '返回首页'
                        }).then(() => {
                            wx.redirectTo({
                                url: '/pages/index'
                            });
                        });
                    } else {
                        Toast.fail(result);
                    }
                }
            );
        } catch (e) {
            // toast('上传失败', 3000);
        }
    }
    events = {};

    watch = {};

    computed = {};
    onLoad(options) {
        this.number = this.RondomPass(5);
        this.wechat = options.wechat;
        this.$apply();
    }
}
</script>

<style lang='less' scoped>
.wrapper {
    width: 556rpx;
    margin: 0 auto;
    text-align: center;
    .thumb {
        width: 470rpx;
        height: 470rpx;
        margin: 147rpx auto 110rpx;
        image {
            width: 100%;
            height: 100%;
        }
    }
    .text {
        font-size: 28rpx;
        font-weight: 300;
        color: rgba(10, 10, 10, 1);
    }
    .word {
        font-size: 32rpx;
        font-weight: 600;
        margin-top: 20rpx;
        color: rgba(10, 10, 10, 1);
    }
    button {
        width: 394rpx;
        height: 84rpx;
        margin: 0 auto;
        font-size: 28rpx;
        line-height: 84rpx;
        font-weight: 600;
        border-radius: 0;
        margin-top: 97rpx;
        color: rgba(252, 252, 252, 1);
        background: rgba(0, 0, 0, 1);
        opacity: 1;
    }
}
</style>
