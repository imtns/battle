
<template>
	<navbar title="赏金模式">
	</navbar>
	<block wx:if="{{!show}}">
		<loadingHeart top="-160rpx" />
	</block>
	<view class='container' wx:if="{{show && !showPop}}">
		<image class="icon-package" src="https://images.facedog.cn/mp/battle/icon-package.png" mode="scaleToFill" lazy-load="false">
		</image>
		<view class="blurLayer"></view>
		<swiper class="swiper" indicator-dots="{{false}}" autoplay="{{false}}" duration="{{200}}" current="{{swiperCurrent}}" bindanimationfinish="bindanimationfinish">
			<repeat key="index" for="{{battleList}}" key="index" index="index" item="item">
				<swiper-item catchtouchmove="stopTouchMove">
					<view class="battle-container " style="top:{{isphoneX?'100rpx':'0'}};">
						<view class="cubit-box cubit-box-top">
							<view class="cubit-heart {{topWave?'wave':''}}" wx:if="{{topDragDistance}}">
								<image class="star {{topWave?'wave':''}}" src="https://images.facedog.cn/public/battle/cubit-star.png" mode="scaleToFill">
								</image>
							</view>
						</view>
						<view class="cubit-box cubit-box-bottom">
							<view class="cubit-heart {{bottomWave?'wave':''}}" wx:if="{{bottomDragDistance}}">
								<image class="star {{bottomWave?'wave':''}}" src="https://images.facedog.cn/public/battle/cubit-star.png" mode="scaleToFill">
								</image>
							</view>
						</view>
						<view @tap="boxClick({{item.a.originalImages}})" class="battle-box {{bothLikeMove ?'bothLikeMove':''}} top {{draggingTop?'frame':''}} {{flyTop[swiperCurrent]?'flyTop':''}}" style="transform: translate3d(0px, {{tranTopY[index] || 0}}px, 0px)!important;" catch:touchmove="touchTopMove({{swiperCurrent}})" catch:touchend="touchEnd">
							<view wx:if="{{!draggingTop}}" class="image-count">共{{item.a.images.length}}张</view>
							<image wx:if="{{!draggingTop}}" src="https://images.facedog.cn/mp/profile/{{item.b.level}}.png" class="{{item.b.level}} level1" mode="scaleToFill" />

							<image src="{{item.a.images[0]}}" class="{{blurTop?'blur':''}}" mode="aspectFill"></image>
							<image src="https://images.facedog.cn/public/battle/pick.png" style="opacity:{{opacityTopPick}}" class="pick" mode="aspectFill" />
							<view class="info" wx:if="{{draggingTop}}">
								<image class="{{item.a.level}} level" src="https://images.facedog.cn/mp/profile/{{item.a.level}}.png" mode="scaleToFill" />

								<view class="name">{{item.a.nick_name}}<view class="xingzuo">{{item.a.constellation}}</view>
								</view>
								<view class="signature">{{item.a.signature}}</view>
								<!-- <view class="desc">{{item.a.gender}}/{{item.a.age}}/{{item.a.constellation}}</view> -->
							</view>
							<view class="info" wx:else>

								<view class="name {{blurTop?'blur':''}}">{{item.a.nick_name}}<text> {{item.a.age}}</text>
									<image wx:if="{{item.a.vip}}" class="vip-icon" src="https://images.facedog.cn/public/profile/vip-icon.png?2" mode="scaleToFill" lazy-load="false"></image>
								</view>
								<!-- <view class="desc {{draggingBottom?'blur':''}}">{{item.a.gender}} / {{item.a.age}} / {{item.a.constellation}}</view> -->
								<view class="distance "><text class="{{blurTop?'blur':''}}">{{item.a.distance}}km</text> <text class="{{blurTop?'blur':''}}"> {{item.a.city}}</text></view>
							</view>
						</view>
						<view class="divider {{bothLike?'rotated':''}}" style="top:532rpx">
							<view class="vs-pic front {{bothLikeRotate ?'rotated':''}} {{!bothLike && !init?'notRotate':''}}">
								<image src="https://images.facedog.cn/public/battle/fist-left.png?2" class="left {{fistAnimation?'ani':''}}" mode="scaleToFill"></image>
								<image src="https://images.facedog.cn/public/battle/vs.png?7" class="vs {{fistAnimation?'ani':''}} " mode="aspectFill"></image>
								<image src="https://images.facedog.cn/public/battle/star.png?7" class="star {{fistAnimation?'ani':''}}" mode="aspectFill"></image>
								<image src="https://images.facedog.cn/public/battle/fist-right.png?2" class="right  {{fistAnimation?'ani':''}}" mode="scaleToFill"></image>
							</view>
							<!-- <view class="vs-pic back {{bothLikeRotate ?'rotated':''}} {{!bothLike && !init?'notRotate':''}} {{bothLikeMove ?'bothLikeMove':''}}" style="opacity:0">
								<image src="https://images.facedog.cn/public/battle/both-like.png" class="both-like" mode="aspectFill"></image>
							</view> -->
						</view>
						<view @tap="boxClick({{item.b.originalImages}})" class="battle-box bottom {{bothLikeMove ?'bothLikeMove':''}} {{draggingBottom?'frame':''}} {{flyBottom[swiperCurrent]?'flyBottom':''}}" style="transform: translate3d(0px, {{tranBottomY[index] || 0}}px, 0px);" catch:touchmove="touchBottomMove({{swiperCurrent}})" catch:touchend="touchEnd">
							<view wx:if="{{!draggingBottom}}" class="image-count">共{{item.b.images.length}}张</view>
							<image wx:if="{{!draggingBottom}}" src="https://images.facedog.cn/mp/profile/{{item.b.level}}.png" class="{{item.b.level}} level1" mode="scaleToFill" />

							<image src="{{item.b.images[0]}}" class="{{blurBottom?'blur':''}}" mode="aspectFill"></image>
							<image src="https://images.facedog.cn/public/battle/pick.png" style="opacity:{{opacityBottomPick}}" class="pick" mode="aspectFill" />
							<view class="info" wx:if="{{draggingBottom}}">
								<image class="{{item.b.level}} level" src="https://images.facedog.cn/mp/profile/{{item.b.level}}.png" mode="scaleToFill" />

								<view class="name">{{item.b.nick_name}}<view class="xingzuo">{{item.b.constellation}}</view>
								</view>
								<view class="signature">{{item.b.signature}}</view>
								<!-- <view class="distance"><text class="number">{{item.b.distance}}km</text> <text class="city"> {{item.b.city}}</text></view> -->
								<!-- <view class="desc">{{item.b.gender}}/{{item.b.age}}/{{item.b.constellation}}</view> -->
							</view>
							<view class="info" wx:else>
								<view class="name {{blurBottom?'blur':''}}">{{item.b.nick_name}}<text> {{item.b.age}}</text>
									<image wx:if="{{item.b.vip}}" class="vip-icon" src="https://images.facedog.cn/public/profile/vip-icon.png?2" mode="scaleToFill" lazy-load="false"></image>
								</view>
								<!-- <view class="desc {{draggingTop?'blur':''}}">{{item.b.gender}} / {{item.b.age}} / {{item.b.constellation}}</view> -->
								<view class="distance"><text class="{{blurBottom?'blur':''}}">{{item.b.distance}}km</text> <text class="{{blurBottom?'blur':''}}"> {{item.b.city}}</text></view>
							</view>
							<view class="pass-box {{passShow?'show':'' }}">
								<image src="https://images.facedog.cn/public/battle/pass-box.png?2" mode="scaleToFill" lazy-load="false">
								</image>
							</view>
						</view>
					</view>
				</swiper-item>
			</repeat>
		</swiper>
	</view>
	<block wx:if="{{showPop}}">
		<pop />
	</block>
	<van-popup show="{{ showCoinPop }}" bind:close="onClose">
		<popCoin />
	</van-popup>
</template>

<script>
import wepy from 'wepy';
import { REWARD_BATTLE_LIST, REWARD_BATTLE_COMMIT } from '@/utils/url';
import { get, post } from '@/utils/request';
import { Event } from '@/utils/event.js';
import { removeDuplicates, throttle, formatDate } from '@/utils';
import Toast from '@/components/vant/toast/toast';

import popCoin from '@/components/battle/module/popCoin';
import loadingHeart from '@/components/battle/module/loadingHeart';
import pop from '@/components/battle/module/pop';
import Dialog from '@/components/vant/dialog/dialog';
export default class Battle extends wepy.page {
  config = {
    usingComponents: {
      navbar: '../../components/navbar/index',
      'van-popup': '../../components/vant/popup/index',
    },
  };
  data = {
    haveEnjoy: 0,
    show: false,
    showPop: false,
    isphoneX: false,
    tranTopY: {}, // 当前激活元素的 Y轴 偏移量
    tranBottomY: {},
    draggingTop: false, // 是否在拖拽中
    draggingBottom: false,
    flyTop: {}, //飞向收藏夹的动画
    flyBottom: {}, // 飞向收藏夹的动画
    topDragDistance: false, // 上面图片拖拽是否超过高度
    bottomDragDistance: false,
    bothLike: false, // 是否bothLike
    bothLikeRotate: false,
    init: false, // 初始化，判断是否执行动画
    topWave: false, // 执行完图片飞行后盒子的抖动
    bottomWave: false, // 执行完图片飞行后盒子的抖动
    bothLikeMove: false,
    swiperCurrent: 0, // 当前swiperIndex
    tutorialShow: false,
    battleList: [],
    likeImageId: '',
    dislikeImageId: '',
    blurTop: false,
    blurBottom: false,
    fistAnimation: false, // 中间vs的动画
    opacityTopPick: 0, // pick的透明度
    opacityBottomPick: 0,
    noProfile: false,
    noProfileCount: 0,
    flyTempID: 0, // 当前动画的临时Id
    passShow: false,
    loaded: false,
    showCoinPop: false,
    profile: {},
    isPhone: false,
  };

  components = {
    loadingHeart,
    pop,
    popCoin,
  };

  //   setEnjoyCount() {
  //     if (this.haveEnjoy <= 0) {
  //       let name = `commit-${formatDate(new Date())}`;
  //       let isShow = wepy.getStorageSync(name);
  //       if (!isShow) {
  //         this.$invoke('popCoin', 'setType', '1');
  //         setTimeout(() => {
  //           this.showCoinPop = true;
  //           this.$apply();
  //           setTimeout(() => {
  //             this.showCoinPop = false;
  //             this.$apply();
  //           }, 2000);
  //         }, 1000);
  //       }
  //       wepy.setStorageSync(name, true);
  //       this.showPop = true;
  //       this.$emit('enjoySet', 0);
  //       this.$apply();
  //       return;
  //     }
  //     let enjoyCount = this.haveEnjoy - 1;
  //     this.$emit('enjoySet', --this.haveEnjoy);
  //     this.haveEnjoy = enjoyCount;
  //   }
  async fly(position) {
    this.flyTempID = this.swiperCurrent;
    if (position == 'top') {
      this.flyTop[this.flyTempID] = true; //图片飞走时间
      setTimeout(() => {
        this.topWave = true; // 飞走后盒子晃动时间
        this.switchBattle();
        this.$apply();
      }, 800);
    } else {
      this.flyBottom[this.flyTempID] = true;
      setTimeout(() => {
        this.bottomWave = true;
        // 晃动完后切换下一组
        this.switchBattle();
        this.$apply();
      }, 800);
    }

    setTimeout(() => {
      this.tranBottomY[this.swiperCurrent - 1] = 0;
      this.tranTopY[this.swiperCurrent - 1] = 0;
      this.flyTop = {};
      this.flyBottom = {};
      this.topWave = false;
      this.bottomWave = false;
      this.topDragDistance = false;
      this.bottomDragDistance = false;
      this.$apply();
    }, 1800);
  }
  // 提交喜欢
  async battleCommit() {
    // if (this.noProfile) {
    //   Event.trigger('showVerify', true);
    //   return;
    // }
    try {
      const data = await post(REWARD_BATTLE_COMMIT, {
        result: {
          win: this.likeImageId,
          fail: this.dislikeImageId,
        },
      });
      console.log('commit!!!!!!!', data);
      Event.trigger('refreshData');
      //   this.setEnjoyCount();

      console.log(data);
      if (data.is_friend) {
        wx.setStorageSync('chatIcon', data.enjoy_user_avatar);
        wx.navigateTo({
          url: `/pages/chat/becomeFriend?id=${data.enjoy_user_dentifier}&nick=${
            data.enjoy_user_nick_name
          }`,
        });
      }
      this.noProfileCount++;
    } catch (e) {}
  }
  // 切换下一组
  switchBattle(isPass) {
    setTimeout(async () => {
      setTimeout(() => {
        // battle切换的时候拳头动画还原,200ms正好看不到还原过程
        this.fistAnimation = false;
        this.$apply();
      }, 200);

      // 晃动完后切换下一组
      if (!isPass) this.battleCommit();

      // 判断如果
      console.log(this.battleList.length, this.swiperCurrent);
      if (this.battleList.length - 1 == this.swiperCurrent) {
        // 如果当前组次数已不足3组，加载下一组
        await this.getBattle();
      }
      this.swiperCurrent++;
      this.blurTop = false;
      this.blurBottom = false;
      this.draggingBottom = false;
      this.draggingTop = false;
      this.opacityBottomPick = 0;
      this.opacityTopPick = 0;
      //   this.setEnjoyCount();
      this.$apply();
      setTimeout(() => {
        this.fistAnimation = true;
        this.passDuaring = false;
        this.$apply();
      }, 400);
    }, 800);
  }
  methods = {
    bindanimationfinish() {
      // 防止swiper滑动后，滑块有的时候不还原位置的问题
      setTimeout(() => {
        this.tranTopY[this.swiperCurrent] = 0;
        this.tranBottomY[this.swiperCurrent] = 0;
        this.$apply();
      }, 100);
    },
    boxClick(images) {
      console.log(images);
      wx.previewImage({
        current: images[0],
        urls: images,
      });
    },
    //阻止swiper可以手动滑动
    stopTouchMove() {
      return false;
    },
    //上面的box拖动事件
    touchTopMove(id, e) {
      if (this.draggingBottom) return;
      this.draggingTop = true;
      this.blurBottom = true; // 拖动上面的时候下面的背景变blur
      let currentTouch = e.changedTouches[0];
      this.topDragDistance = this.tranTopY[id] > 50;
      //   console.log(currentTouch);
      let { clientY } = currentTouch;
      // 如果不是同一个触发点则返回
      // 通过 当前坐标点, 初始坐标点, 初始偏移量 来计算当前偏移量
      let tranY = clientY - 180;

      if (tranY < 0) {
        tranY = 0;
      }
      if (tranY > 80) {
        tranY = 80;
      }
      throttle(this.setValue(tranY, this.swiperCurrent, 'top'), 500);
      this.opacityTopPick = tranY / 80;
      //   this.tranTopY[id] = clientY;
      //   this.$apply();
    },
    //下面box拖动事件
    touchBottomMove(id, e) {
      //   if (this.noProfile && this.noProfileCount >= 2) {
      //     Event.trigger('showVerify', true);
      //     return;
      //   }
      if (this.draggingTop) return;
      this.draggingBottom = true;
      this.blurTop = true; // 拖动下面的时候上面的背景变blur
      let currentTouch = e.changedTouches[0];
      //   console.log(currentTouch);
      this.bottomDragDistance = this.tranBottomY[id] < -190;
      let { clientY } = currentTouch;
      let tranY = clientY - 600;

      if (tranY < -215) {
        tranY = -215;
      }
      if (tranY > -115) {
        tranY = -115;
      }
      this.opacityBottomPick = (tranY == -115 ? 0 : tranY) / -215;
      throttle(this.setValue(tranY, this.swiperCurrent, 'bottom'), 500);
      //   this.tranBottomY[this.swiperCurrent] = tranY;
      //   console.log(tranY);
      //   this.$apply();
    },
    //拖动结束后
    touchEnd() {
      if (this.bottomDragDistance) {
        this.fly('bottom');
        this.likeImageId = this.battleList[this.swiperCurrent].b._id;
        this.dislikeImageId = this.battleList[this.swiperCurrent].a._id;
        this.$apply();
      } else {
        this.blurTop = false;
        this.draggingBottom = false;
        this.opacityBottomPick = 0;
        this.tranBottomY[this.swiperCurrent] = '1';
      }
      if (this.topDragDistance) {
        this.fly('top');
        this.likeImageId = this.battleList[this.swiperCurrent].a._id;
        this.dislikeImageId = this.battleList[this.swiperCurrent].b._id;
        this.$apply();
      } else {
        this.draggingTop = false;
        this.blurBottom = false;
        this.opacityTopPick = 0;
        this.tranTopY[this.swiperCurrent] = '1';
      }
      this.$apply();
    },
    hasProfile(tag) {
      this.noProfile = !tag;
    },
    init(profile) {
      this.init = true; // 防止页面切换进来时动画重新执行
      this.profile = profile;
      this.$apply();
    },
  };
  setValue(tranY, id, position) {
    if (position == 'top') {
      this.tranTopY[id] = tranY;
    } else {
      this.tranBottomY[id] = tranY;
    }
    this.$apply();
  }
  async getBattle() {
    this.swiperCurrent = 0;
    this.profile = wepy.getStorageSync('profile');
    this.battleList = [];
    let res = await get(REWARD_BATTLE_LIST);
    let result = res.data;
    this.haveEnjoy = res.have_enjoy;
    if (this.haveEnjoy <= 0) {
      let name = `commit-${formatDate(new Date())}`;
      wepy.setStorageSync(name, true);
      this.showPop = true;
      this.show = false;
      this.$apply();
      return;
    }
    this.$emit('enjoySet', this.haveEnjoy);
    console.warn('result', result);
    result.a.forEach((item, index) => {
      result.a[index].distance = (result.a[index].distance / 1000).toFixed(2);
      result.a[index].gender = result.a[index].gender == 'female' ? '女' : '男';
      result.a[index].originalImages = [...result.a[index].images];
      result.a[index].images.forEach((image, idx) => {
        result.a[index].images[idx] =
          image + '?x-oss-process=image/resize,w_600,h_600/format,jpg';
      });

      result.b[index].originalImages = [...result.b[index].images];
      result.b[index].images.forEach((image, idx) => {
        result.b[index].images[idx] =
          image + '?x-oss-process=image/resize,w_600,h_600/format,jpg';
      });
      result.b[index].distance = (result.b[index].distance / 1000).toFixed(2);
      result.b[index].gender = result.b[index].gender == 'female' ? '女' : '男';
      this.battleList.push({
        a: result.a[index],
        b: result.b[index],
      });
      this.show = true;
      this.$apply();
    });
    // this.battleList = result;
  }
  events = {};

  watch = {};

  computed = {};

  onLoad() {
    if (!wepy.getStorageSync('hasProfile')) {
      this.noProfile = true;
      this.$apply();
    }
    setTimeout(() => {
      this.profile = wepy.getStorageSync('profile');
      this.$apply();
    }, 1000);
    let that = this;
    wx.getSystemInfo({
      success(res) {
        var name = 'iPhone X';
        if (res.model.indexOf('iPhone') > -1) {
          that.isPhone = true;
        }
        if (
          res.model.indexOf('iPhone 11') > -1 ||
          res.model.indexOf('iPhone X') > -1 ||
          res.model.indexOf('unknown<iPhone') > -1
        ) {
          console.warn('isIphoneX !!!!!!!');
          that.isphoneX = true;
        } else if (res.safeArea.top > 24) {
          that.isphoneX = true;
        }
        that.$apply();
      },
    });
    this.getBattle();
    Event.listen('battleFresh', () => {
      this.getBattle();
    });
    setTimeout(() => {
      this.fistAnimation = true;
      this.$apply();
    }, 900);
  }
  onShow() {}
}
</script>
<style lang="scss">
	.van-dialog__message {
	  background: white;
	}
</style>

<style lang='less' scoped>
	.swiper {
	  width: 100%;
	  min-height: 93vh;
	  overflow-x: hidden;
	}
	@keyframes fadeIn {
	  0% {
	    opacity: 0;
	  }
	  100% {
	    opacity: 1;
	  }
	}
	.fade_in {
	  animation: fadeIn 0.5s both;
	}
	.box-layer {
	  position: absolute;
	  top: 0;
	  left: 0;
	  width: 100%;
	  height: 100%;
	  z-index: 99999;
	  transition: all 0.3s;
	  background: rgba(0, 0, 0, 0.55);
	  .pop-box {
	    margin: 114rpx auto;
	    width: 500rpx;
	    height: 810rpx;
	    display: flex;
	    justify-content: center;
	    position: relative;
	    flex-wrap: wrap;
	    background: rgba(255, 255, 255, 1);
	    .image {
	      width: 100%;
	      height: 100%;
	      display: block;
	    }
	    .text {
	      font-size: 28rpx;
	      color: #030303;
	      position: absolute;
	      left: 164rpx;
	      .red {
	        font-weight: bold;
	        font-size: 34rpx;
	        color: #df062e;
	      }
	    }
	    .rankText {
	      position: absolute;
	      top: 557rpx;
	      left: 305rpx;
	      font-weight: bold;
	      font-size: 24rpx;
	      color: #030303;
	      &.red {
	        color: #df062e;
	      }
	    }
	    .display-time {
	      top: 292rpx;
	    }
	    .win-time {
	      top: 442rpx;
	    }
	    .face {
	      top: 592rpx;
	    }
	    .pop-btn {
	      width: 420rpx;
	      height: 78rpx;
	      bottom: 20rpx;
	      line-height: 78rpx;
	      text-align: center;
	      font-weight: 500;
	      position: absolute;
	      background: rgba(223, 6, 46, 1);
	      color: #fcfcfc;
	      font-size: 28rpx;
	    }
	  }
	  .icon {
	    width: 96rpx;
	    height: 96rpx;
	  }
	  // .text {
	  //     margin-left: 26rpx;
	  //     font-size: 32rpx;
	  //     font-weight: 400;
	  //     color: rgba(30, 30, 30, 1);
	  // }
	}
	.divider {
	  position: absolute;
	  left: 50%;
	  transform: translate(-50%, -50%);
	  width: 690rpx;
	  height: 118rpx;
	  display: flex;
	  align-items: center;
	  -webkit-perspective: 1000;
	  z-index: 10;
	  transition: all 1s ease;
	  transform-style: preserve-3d;

	  image {
	    position: absolute;
	    top: 0;
	  }
	  &.rotated {
	    transform: translate3d(-50%, -50%, 180rpx) rotateX(-180deg);
	    transform-origin: center;
	    z-index: 999;
	  }
	  .front {
	    &.rotated {
	      animation: frontRotate 0.5s ease-in 1;
	      animation-fill-mode: both;
	      opacity: 1;
	      @keyframes frontRotate {
	        0% {
	          opacity: 1;
	        }
	        30% {
	          opacity: 1;
	        }
	        100% {
	          opacity: 0;
	        }
	      }
	    }
	    &.notRotate {
	      animation: frontNotRotate 0.5s ease-in 1;
	      animation-fill-mode: both;
	      opacity: 0;
	      @keyframes frontNotRotate {
	        0% {
	          opacity: 0;
	        }
	        80% {
	          opacity: 1;
	        }
	        100% {
	          opacity: 1;
	        }
	      }
	    }
	    // transform-style: preserve-3d;
	  }
	  .back {
	    &.bothLikeMove {
	      transform: scale(1.1, 1.1) rotateX(180deg);
	    }
	    &.rotated {
	      animation: backRotate 0.5s ease-in 1;
	      animation-fill-mode: both;
	      opacity: 0;
	      @keyframes backRotate {
	        0% {
	          opacity: 0;
	        }
	        20% {
	          opacity: 0;
	        }
	        100% {
	          opacity: 1;
	        }
	      }
	      transform-origin: center;
	    }
	    &.notRotate {
	      animation: notRotate 0.5s ease-in 1;
	      animation-fill-mode: both;
	      opacity: 1;
	      @keyframes notRotate {
	        0% {
	          opacity: 1;
	        }
	        10% {
	          opacity: 1;
	        }
	        100% {
	          opacity: 0;
	        }
	      }
	    }
	    opacity: 0;
	    transform: rotateX(180deg);
	    transform-style: preserve-3d;
	  }
	  .vs-pic {
	    width: 100%;
	    height: 118rpx;
	    left: 0;
	    position: absolute;
	  }
	  .left,
	  .right {
	    width: 320rpx;
	    height: 92rpx;
	    z-index: 2;
	  }
	  .both-like {
	    width: 720rpx;
	    height: 118rpx;
	    left: 50%;
	    transform: translateX(-50%);
	  }
	  .left {
	    left: -6rpx;
	    transform: translate3d(-100%, 0, 0);
	    &.ani {
	      animation: fistLeft 0.6s ease-in 1;
	      animation-fill-mode: both;
	      @keyframes fistLeft {
	        0% {
	          transform: translate3d(-100%, 0, 0);
	        }
	        60% {
	          transform: translate3d(0%, 0, 0);
	        }
	        70% {
	          transform: translate3d(-7%, 0, 0);
	        }
	        100% {
	          transform: translate3d(-1%, 0, 0);
	        }
	      }
	    }
	  }
	  .right {
	    right: -6rpx;
	    transform: translate3d(100%, 0, 0);
	    &.ani {
	      animation: fistRight 0.6s ease-in 1;
	      animation-fill-mode: both;
	      @keyframes fistRight {
	        0% {
	          transform: translate3d(100%, 0, 0);
	        }
	        60% {
	          transform: translate3d(0, 0%, 0);
	        }
	        70% {
	          transform: translate3d(7%, 0, 0);
	        }
	        100% {
	          transform: translate3d(1%, 0, 0);
	        }
	      }
	    }
	  }
	  .star {
	    position: absolute;
	    left: 334rpx;
	    top: -50rpx;
	    width: 63rpx;
	    height: 54rpx;
	    opacity: 0;
	    &.ani {
	      animation: starShine 0.3s ease-in 1;
	      animation-fill-mode: both;
	      animation-delay: 0.3s;
	      @keyframes starShine {
	        0% {
	          opacity: 0;
	        }
	        50% {
	          opacity: 1;
	        }
	        100% {
	          opacity: 0;
	        }
	      }
	    }
	  }
	  .vs {
	    width: 110rpx;
	    height: 110rpx;
	    left: 50%;
	    transform: translateX(-50%);
	    &.ani {
	      transform: translateX(-50%);
	      animation: vsScale 0.3s ease-in-out 1;
	      animation-delay: 0.4s;
	      animation-fill-mode: both;
	      @keyframes vsScale {
	        0% {
	          transform: translateX(-50%) scaleY(1);
	        }
	        85% {
	          transform: translateX(-50%) scaleY(1.1);
	        }
	        100% {
	          transform: translateX(-50%) scaleY(1);
	        }
	      }
	    }
	  }
	}
	.container {
	  display: flex;
	  flex-direction: column;
	  align-items: center;
	  justify-content: space-between;
	  box-sizing: border-box;
	  overflow-x: hidden;
	  width: 100%;
	  background: rgba(0, 0, 0)
	    url(https://images.facedog.cn/mp/battle/reward_bottom.png) no-repeat;
	  background-position: bottom;
	  background-size: contain;
	  position: relative;
	  .icon-package {
	    width: 55rpx;
	    height: 69rpx;
	    position: absolute;
	    right: 30rpx;
	    top: 118rpx;
	    z-index: 999;
	  }
	  .unopen-redpackage {
	    width: 614rpx;
	    height: 666rpx;
	    position: absolute;
	    top: 50%;
	    left: 50%;
	    transform: translate(-50%, -50%);
	    image {
	      width: 100%;
	      height: 100%;
	    }
	  }
	  image {
	    width: 100%;
	    height: 100%;
	    &.blur {
	      filter: blur(6rpx);
	      transition: 0.3s ease-in-out;
	    }
	  }
	  .pick {
	    width: 431rpx;
	    height: 314rpx;
	    position: absolute;
	    top: 40%;
	    left: 50%;
	    transform: translate3d(-50%, -50%, 0);
	  }
	  .battle-container {
	    width: 690rpx;
	    display: flex;
	    flex-direction: column;
	    align-items: center;
	    position: relative;
	    height: 1064rpx;
	    margin: 0 auto;
	    margin-top: 40rpx;
	    border-radius: 36rpx;
	    &.fadeout {
	      animation: containerOut 1s ease-in-out 1;
	      animation-fill-mode: both;
	    }
	    @keyframes containerOut {
	      0% {
	        opacity: 1;
	      }
	      100% {
	        opacity: 0;
	      }
	    }
	    .cubit-box-top {
	      top: 20rpx;
	      .star {
	        opacity: 0;
	      }
	      .wave {
	        animation: boxWave 0.4s ease-in-out 1;
	        animation-fill-mode: both;
	        animation-delay: 0.4s;
	      }
	    }
	    .cubit-box-bottom {
	      bottom: 20rpx;
	      .star {
	        opacity: 0;
	      }
	      .wave {
	        animation: boxWave 0.4s ease-in-out 1;
	        animation-fill-mode: both;
	        animation-delay: 0.4s;
	      }
	    }
	    @keyframes boxWave {
	      0% {
	        opacity: 0;
	        transform: scale(1);
	      }
	      33% {
	        opacity: 0;
	        transform: scale(1.15);
	      }
	      66% {
	        opacity: 1;
	        transform: scale(1);
	      }
	      100% {
	        opacity: 1;
	        transform: scale(1.15);
	      }
	    }
	    .cubit-box {
	      position: absolute;
	      left: 50%;
	      transform: translateX(-50%);
	      width: 690rpx;
	      height: 123rpx;
	      display: flex;
	      justify-content: center;
	      &.cubit-box-top {
	        background: url(https://images.facedog.cn/public/battle/cubit-top.png);
	        background-size: cover;
	        transform-origin: center;
	      }
	      &.cubit-box-bottom {
	        background: url(https://images.facedog.cn/public/battle/cubit-bottom.png);
	        background-size: cover;
	        transform-origin: center;
	        .cubit-heart {
	          position: relative;
	          top: 40rpx;
	        }
	      }
	      .cubit-heart {
	        width: 95rpx;
	        height: 82rpx;
	        background: url(https://images.facedog.cn/public/battle/cubit-heart.png);
	        background-size: cover;
	        transform-origin: center;
	        display: flex;
	        justify-content: center;
	        align-items: center;
	        &.wave {
	          animation: heartWave 0.4s ease-in-out 1;
	          animation-fill-mode: both;
	          @keyframes heartWave {
	            0% {
	              transform: scale(1);
	            }
	            50% {
	              transform: scale(1.15);
	            }
	            100% {
	              transform: scale(1);
	            }
	          }
	        }
	        image {
	          width: 51rpx;
	          height: 42rpx;
	          opacity: 0;
	        }
	      }
	      &.open {
	        background: url(https://images.facedog.cn/public/battle/box-open.png);
	        background-size: cover;
	      }
	    }
	    .battle-box {
	      width: 690rpx;
	      height: 532rpx;
	      opacity: 1;
	      overflow: hidden;
	      margin: 0 auto;
	      position: absolute;
	      z-index: 8;
	      transition: all 0.2s;
	      .image-count {
	        background: rgba(0, 0, 0, 0.5);
	        display: inline-flex;
	        padding: 4rpx 14rpx;
	        position: absolute;
	        top: 20rpx;
	        right: 20rpx;
	        border-radius: 5px;
	        justify-content: center;
	        align-items: center;
	        color: white;
	        font-size: 26rpx;
	      }
	      .level1 {
	        height: 56rpx;
	        position: absolute;
	        left: 30rpx;
	        top: 30rpx;
	        &.N {
	          width: 56rpx;
	        }
	        &.R {
	          width: 52rpx;
	        }
	        &.SR {
	          width: 90rpx;
	        }
	        &.SSR {
	          width: 129rpx;
	        }
	      }
	      .vip-icon {
	        position: relative;
	        width: 72rpx;
	        margin-left: 5rpx;
	        height: 24rpx !important;
	      }
	      &.top {
	        &.bothLikeMove {
	          height: 430rpx;
	          animation: topMove 0.2s linear 1;
	          animation-fill-mode: both;
	          @keyframes topMove {
	            0% {
	              top: 0;
	            }
	            100% {
	              top: 140rpx;
	            }
	          }
	        }
	      }
	      &.bottom {
	        &.bothLikeMove {
	          height: 430rpx;
	          animation: bottomMove 0.2s linear 1;
	          animation-fill-mode: both;
	          @keyframes bottomMove {
	            0% {
	              top: 50%;
	            }
	            100% {
	              top: 46%;
	            }
	          }
	        }
	      }
	      &.flyTop {
	        animation: flyTop 0.7s ease-in-out 1;
	        animation-fill-mode: both;
	      }
	      @keyframes flyTop {
	        /** 第一种写法**/
	        0% {
	          transform: translate3d(0, 10%, 0) scale(1, 1);
	        }
	        100% {
	          transform: translate3d(0, -45%, 0) scale(0, 0);
	        }
	      }
	      &.flyBottom {
	        animation: flyBottom 0.7s ease-in-out 1;
	        animation-fill-mode: both;
	      }
	      @keyframes flyBottom {
	        /** 第一种写法**/
	        0% {
	          transform: translate3d(0, -30%, 0) scale(1, 1);
	        }
	        100% {
	          transform: translate3d(0, 8%, 0) scale(0, 0);
	        }
	      }
	      &.frame {
	        width: 618rpx;
	        height: 772rpx;
	        background: rgba(255, 255, 255, 1);
	        box-shadow: 0px 0px 20rpx rgba(43, 43, 43, 0.5);
	        opacity: 1;
	        z-index: 999999 !important;
	        border-radius: 27rpx !important;
	        display: flex;
	        // justify-content: center;
	        flex-wrap: wrap;

	        image:not(.pick) {
	          margin: 11rpx;
	          width: 595rpx;
	          height: 595rpx;
	          border-radius: 27rpx;
	          border-bottom-left-radius: 0rpx;
	          border-bottom-right-radius: 0rpx;
	        }
	        .info {
	          position: relative;
	          width: 100%;
	          .level {
	            margin-top: 24rpx;
	            height: 56rpx;
	            position: absolute;
	            right: 40rpx;
	            top: 48rpx;
	            &.N {
	              width: 56rpx;
	            }
	            &.R {
	              width: 52rpx;
	            }
	            &.SR {
	              width: 90rpx;
	            }
	            &.SSR {
	              width: 129rpx;
	            }
	          }
	          .name {
	            // background: url(https://images.facedog.cn/public/battle/name-wrapper.png);
	            // width: 513rpx;
	            // height: 25rpx;
	            // background-size: cover;
	            // text-align: center;
	            // line-height: 25rpx;
	            // font-size: 35rpx;
	            // color: #000;
	            // position: relative;
	            // margin: 0 auto;
	            // font-weight: bold;
	            // text-shadow: none;
	            margin-left: 15rpx;
	            margin-top: 38rpx;
	            color: #000;
	            font-size: 40rpx;
	            text-shadow: none;
	            .xingzuo {
	              display: inline-block;
	              border-radius: 5rpx;
	              padding: 3rpx 4rpx;
	              background: #48acff;
	              color: white;
	              font-size: 14rpx;
	              margin-left: 4rpx;
	              position: relative;
	              top: -4rpx;
	            }
	          }
	          .signature {
	            color: #888888;
	            font-size: 20rpx;
	            text-shadow: none;
	            margin-left: 13rpx;
	            margin-top: 5rpx;
	          }
	          .distance {
	            font-size: 15rpx;
	            margin-top: 22rpx;
	            text-align: center;
	            font-weight: 300;
	            text {
	              &.number {
	                color: #f25458;
	                text-shadow: none;
	              }
	              &.city {
	                color: #000;
	                text-shadow: none;
	              }
	            }
	          }
	          .desc {
	            // font-weight: 300;
	            // margin-top: 10rpx;
	            // text-align: center;
	            // font-size: 20rpx;
	            // text-shadow: none;
	            // color: #000;
	            margin-top: 9rpx;
	            color: #888;
	            margin-left: 19rpx;
	            font-size: 20rpx;
	            text-shadow: none;
	          }
	        }
	      }
	      &.active {
	        animation: flyAway 0.3s ease-in 1;
	        animation-fill-mode: both;
	      }
	      @keyframes flyAway {
	        0% {
	          transform: translate3d(0, 0, 0);
	        }
	        100% {
	          transform: translate3d(-150%, 0, 0);
	        }
	      }
	      .info {
	        position: absolute;
	        left: 18rpx;
	        bottom: 40rpx;
	        color: white;
	        font-size: 40rpx;
	        font-weight: 800;
	        text-shadow: 0px 1rpx 3rpx rgba(0, 0, 0, 0.47);
	        .name {
	          font-size: 48rpx;
	          text-shadow: 0px 3rpx 3rpx rgba(0, 0, 0, 0.47);
	          text {
	            font-size: 30rpx;
	          }
	          &.blur {
	            color: transparent;
	            text-shadow: #fff 0 0 8rpx;
	          }
	        }
	        .distance {
	          font-size: 20rpx;
	          text:first-child {
	            color: #ffd900;
	            text-shadow: 0px 2rpx 1rpx rgba(0, 0, 0, 0.72);
	            &.blur {
	              color: transparent;
	              text-shadow: #ffd900 0 0 8rpx;
	            }
	          }
	          text:last-child {
	            color: #fff;
	            text-shadow: 0px 2rpx 1rpx rgba(0, 0, 0, 0.72);
	            &.blur {
	              color: transparent;
	              text-shadow: #fff 0 0 8rpx;
	            }
	          }
	          //   text {
	          //     text-shadow: 0px 1rpx 3rpx rgba(0, 0, 0, 0.47);
	          //   }
	        }
	        .desc {
	          &.blur {
	            color: transparent;
	            text-shadow: #fff 0 0 8rpx;
	          }
	        }
	      }
	      .pass-box {
	        width: 429rpx;
	        height: 317rpx;
	        position: absolute;
	        left: 50%;
	        top: 50%;
	        transform: translate(-50%, -50%);
	        image {
	          width: 100%;
	          height: 100%;
	        }
	        transition: all 0.3s;
	        opacity: 0;
	        &.show {
	          opacity: 1;
	        }
	      }
	      .both-like {
	        width: 429rpx;
	        height: 317rpx;
	        position: absolute;
	        left: 50%;
	        top: 50%;
	        transform: translate(-50%, -50%);
	        image {
	          width: 100%;
	          height: 100%;
	        }
	        transition: all 0.3s;
	        opacity: 0;
	        &.show {
	          opacity: 1;
	        }
	      }
	      &.top {
	        border-radius: 36rpx 36rpx 0rpx 0rpx;
	        z-index: 10;
	        // image {
	        //     border-radius: 36rpx 36rpx 0rpx 0rpx;
	        // }
	      }
	      &.bottom {
	        z-index: 9;
	        border-radius: 0rpx 0rpx 36rpx 36rpx;
	        top: 50%;
	        // image {
	        //     border-radius: 0rpx 0rpx 36rpx 36rpx;
	        // }
	      }
	    }
	  }
	}
</style>
